apiVersion: v1
kind: Namespace
metadata:
  name: kagent
  labels:
    app: kagent 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kagent
  namespace: kagent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kagent-kserve-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kserve-manager-role
subjects:
- kind: ServiceAccount
  name: kagent
  namespace: kagent
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/folder/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
  namespace: kagent
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-kagent
  namespace: kagent
  labels:
    app: kagent
    service: kagent
spec:
  ports:
  - name: grpc
    port: 80
    targetPort: 9000
    protocol: TCP
  selector:
    app: kagent
  type: ClusterIP   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpc-kagent
  namespace: kagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kagent
      version: v1
  template:    
    metadata:
      labels:
        app: kagent
        version: v1
    spec:
      serviceAccountName: kagent
      volumes:
      - name: model-store
        persistentVolumeClaim:
          claimName: task-pv-claim
      containers:
      - image: docker.io/lw233/kagent
        imagePullPolicy: Always
        name: grpc-kagent
        ports:
        - containerPort: 9000
          protocol: TCP
          name: grpc
        volumeMounts:
        - mountPath: "/pv"
          name: model-store
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-kagent-issuer
  namespace: kagent
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kagent-cert
  namespace: istio-system
spec:
  commonName: kagent.example.com
  dnsNames:
  - kagent.example.com
  issuerRef:
    kind: Issuer
    name: selfsigned-kagent-issuer
  secretName: kagent-tls-cert
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kagent-gateway
  namespace: kagent
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: grpc
      protocol: GRPC
    hosts:
    - "*" 
  - port:
      number: 443
      name: grpctls
      protocol: HTTPS
    hosts:
    - "*" 
    tls:
      mode: SIMPLE
      credentialName: kagent-tls-cert
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kagent-vs
  namespace: kagent
spec:
  hosts:
  - "*"
  gateways:
  - kagent-gateway
  http:
  - match:
    - uri:
        prefix: /isvc
    - uri:
        prefix: /predict    
    route:
    - destination:
        port:
          number: 80
        host: grpc-kagent.kagent.svc.cluster.local    
